{"version":3,"sources":["assets/loginImg.jpg","utils/LoginFormData.js","pages/Login/Login.jsx"],"names":["loginFormData","id","type","name","placeholder","required","LoginPage","history","useHistory","auth","useContext","AuthContext","useState","status","msg","error","setError","backImg","center","background","props","theme","secondary","notificationMessage","handleClick","color","callback","fieldValues","Login","fields","buttonText","buttonType","to","src","logoImg","alt"],"mappings":"qGAAe,QAA0B,sC,0GCiB1BA,EAjBO,CACpB,CACEC,GAAI,EACJC,KAAM,QACNC,KAAM,QACNC,YAAa,oBACbC,UAAU,GAEZ,CACEJ,GAAI,EACJC,KAAM,WACNC,KAAM,WACNC,YAAa,qBACbC,UAAU,I,wBC0DCC,UA5Df,WACE,IAAMC,EAAUC,cACVC,EAAOC,qBAAWC,KAFL,EAGOC,mBAAS,CAAEC,QAAQ,EAAOC,IAAK,UAHtC,mBAGZC,EAHY,KAGLC,EAHK,KAKnB,OACE,oCACE,kBAAC,IAAD,CAAkBC,QAASA,MAE3B,kBAAC,IAAD,CACEC,QAAQ,EACRC,WAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMC,UAAUH,aAI7C,kBAAC,IAAD,KACGJ,EAAMF,QACL,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEU,oBAAqBR,EAAMD,IAE3BU,YAAa,kBAAMR,EAAS,CAAEH,QAAQ,KACtCY,MAAM,WAKZ,kBAAC,IAAD,cAEA,kBAAC,IAAD,CAGEC,SAAU,SAACC,GACTC,YAAMD,EAAalB,EAAMF,EAASS,GAClCA,EAAS,CAAEH,QAAQ,KAErBgB,OAAQ7B,EACR8B,WAAW,QACXC,WAAW,YAIf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMC,GAAG,aACP,kBAAC,IAAD,CAAQP,MAAM,WAAd,aAGF,kBAAC,IAAD,CAAMO,GAAG,KACP,kBAAC,IAAD,gBAKN,kBAAC,IAAD,CAAMA,GAAG,KACP,kBAAC,IAAD,CAAWC,IAAKC,IAASC,IAAI","file":"static/js/5.97f8ef1d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loginImg.5f5451d5.jpg\";","const loginFormData = [\r\n  {\r\n    id: 1,\r\n    type: \"email\",\r\n    name: \"email\",\r\n    placeholder: \"enter login email\",\r\n    required: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    type: \"password\",\r\n    name: \"password\",\r\n    placeholder: \"enter your pasword\",\r\n    required: true,\r\n  },\r\n];\r\n\r\nexport default loginFormData;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\nimport { FormTemplate, Section, Notification, Button } from \"../../components/\";\r\nimport { Login } from \"../../utils/Functions\";\r\nimport loginFormData from \"../../utils/LoginFormData\";\r\nimport logoImg from \"../../assets/logo.svg\";\r\n\r\nimport * as G from \"../../themes/Global.styled\";\r\nimport backImg from \"../../assets/loginImg.jpg\";\r\n\r\nfunction LoginPage() {\r\n  const history = useHistory();\r\n  const auth = useContext(AuthContext);\r\n  const [error, setError] = useState({ status: false, msg: \"error\" });\r\n\r\n  return (\r\n    <>\r\n      <G.PageBackground backImg={backImg} />\r\n\r\n      <Section\r\n        center={true}\r\n        background={(props) => props.theme.secondary.background}\r\n      >\r\n        {/* notification is shown depending on error status and changed with hooks */}\r\n\r\n        <G.Block>\r\n          {error.status && (\r\n            <G.ErrorBlock>\r\n              <Notification\r\n                notificationMessage={error.msg}\r\n                // button handler turns of notification\r\n                handleClick={() => setError({ status: false })}\r\n                color=\"error\"\r\n              />\r\n            </G.ErrorBlock>\r\n          )}\r\n\r\n          <G.Title>LOGIN</G.Title>\r\n\r\n          <FormTemplate\r\n            // Form component uses callback function to execute submit function\r\n            // also uses data from ulits folder to create form\r\n            callback={(fieldValues) => {\r\n              Login(fieldValues, auth, history, setError);\r\n              setError({ status: false });\r\n            }}\r\n            fields={loginFormData}\r\n            buttonText=\"LOGIN\"\r\n            buttonType=\"submit\"\r\n          />\r\n        </G.Block>\r\n\r\n        <G.ButtonBlock>\r\n          <Link to=\"/register\">\r\n            <Button color=\"primary\">REGISTER</Button>\r\n          </Link>\r\n\r\n          <Link to=\"/\">\r\n            <Button>BACK</Button>\r\n          </Link>\r\n        </G.ButtonBlock>\r\n      </Section>\r\n\r\n      <Link to=\"/\">\r\n        <G.BigLogo src={logoImg} alt=\"teamo logo\" />\r\n      </Link>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"sourceRoot":""}